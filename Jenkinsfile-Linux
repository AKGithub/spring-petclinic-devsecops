node {
    def workspace = pwd()
    
    stage('Application_Build') {
        checkout scm
        sh 'mvn clean package -DskipTests'
    }    
    stage('Application_Dependency_Check') {
        sh '/home/user1/DevSecOps/dependency-check/bin/dependency-check.sh --project sppetclinic --scan ./'
    }
    stage('Application_Unit_Test') {        
        sh 'mvn compiler:testCompile surefire:test'
        step([$class: 'JUnitResultArchiver', testResults: "**/surefire-reports/*.xml"])
    }    
    stage('Application_Code_Analysis') {        
        withSonarQubeEnv {
            sh 'mvn sonar:sonar -Dsonar.projectKey=Petclinic_Static_Code_Analysis -Dsonar.projectName=Petclinic_Static_Code_Analysis -PQP1'
        }
    }
    stage('Application_Static_Security_Testing') {        
        withSonarQubeEnv {
            sh 'mvn sonar:sonar -Dsonar.projectKey=Petclinic_SAST -Dsonar.projectName=Petclinic_SAST -PQP2'
        }        
    }
    stage('Application_Deploy') {
        sh "cp ${workspace}/target/petclinic.war ${TOMCAT_HOME}/webapps/"
    }    
    stage('Application_Dynamic_Security_Testing') {
        sh '/home/user1/DevSecOps/ZAP_2.9.0/zap.sh -cmd -quickurl http://localhost:8090/petclinic -quickprogress -quickout ~/reportout.xml'
    }
}
